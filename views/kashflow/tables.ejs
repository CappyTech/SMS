<!-- Loading Spinner -->
<div id="loading-overlay">
    <div id="spinner"></div>
</div>

<style>
    /* Spinner Styling */
    #loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.7);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
        visibility: visible; /* Default to visible */
    }

    #spinner {
        border: 8px solid #f3f3f3;
        border-top: 8px solid #3498db;
        border-radius: 50%;
        width: 60px;
        height: 60px;
        animation: spin 1s linear infinite;
    }

    @keyframes spin {
        0% {
            transform: rotate(0deg);
        }
        100% {
            transform: rotate(360deg);
        }
    }
</style>

<style>
    body {
        background-color: #121212;
        color: #ffffff;
    }

    /* Table header and row styling for dark mode */
    table.dataTable thead {
        background-color: #333333;
        color: #ffffff;
    }

    table.dataTable tbody tr {
        background-color: #242424;
        color: #ffffff;
    }

    /* Hover effect on rows */
    table.dataTable tbody tr:hover {
        background-color: #3a3a3a;
    }

    h2 {
        text-align: center;
        margin-top: 30px;
        margin-bottom: 20px;
    }
</style>
<div id="page-content" style="visibility: hidden;">
    <div class="container my-4">
        <h1 class="text-center mb-4">Dashboard</h1>

        <% const tables = [
            { id: 'customersTable', title: 'Customers', data: KF_Customers },
            { id: 'invoicesTable', title: 'Invoices', data: KF_Invoices },
            { id: 'projectsTable', title: 'Projects', data: KF_Projects },
            { id: 'quotesTable', title: 'Quotes', data: KF_Quotes },
            { id: 'receiptsTable', title: 'Receipts', data: KF_Receipts },
            { id: 'suppliersTable', title: 'Suppliers', data: KF_Suppliers }
        ]; %>

        <% tables.forEach(table => { %>
            <h2><%= table.title %></h2>
        
            <!-- Table -->
            <table id="<%= table.id %>" class="table table-bordered table-hover display">
                <thead>
                    <tr>
                        <% Object.keys(table.data[0]).forEach(column => { %>
                            <th><%= column %></th>
                        <% }) %>
                    </tr>
                </thead>
                <tbody>
                    <% table.data.forEach(row => { %>
                        <tr>
                            <% Object.values(row).forEach(value => { %>
                                <td><%= value || '' %></td>
                            <% }) %>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        <% }) %>    
    </div>
</div>

<!-- DataTables and jQuery Scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.11.3/js/dataTables.bootstrap5.min.js"></script>

<script>
    $(document).ready(function () {
        const tables = [
            '#customersTable',
            '#invoicesTable',
            '#projectsTable',
            '#quotesTable',
            '#receiptsTable',
            '#suppliersTable'
        ];

        let promises = tables.map((tableId) => {
            return new Promise((resolve) => {
                $(tableId).DataTable({
                    paging: true,
                    pageLength: 10,
                    lengthMenu: [[5, 20, 30, 50, 100, -1], [5, 20, 30, 50, 100, "All"]],
                    lengthChange: true,
                    ordering: true,
                    responsive: true,
                    language: {
                        lengthMenu: "Show _MENU_ entries per page",
                        info: "Showing _START_ to _END_ of _TOTAL_ entries",
                        infoEmpty: "No entries available",
                        paginate: {
                            next: "Next",
                            previous: "Previous"
                        }
                    },
                    initComplete: function () {
                        resolve(); // Resolve the promise when the table finishes loading
                    }
                });
            });
        });

        // Once all tables are initialized, hide the loading overlay
        Promise.all(promises).then(() => {
            $('#loading-overlay').css('visibility', 'hidden');
            $('#page-content').css('visibility', 'visible');
        });
    });
</script>
