<div class="container my-5">
    <h1 class="display-1 text-center mb-4">KashFlow Dashboard</h1>

    <!-- Top Summary Metrics -->
    <div class="row text-center mb-5">
        <div class="col-md-3">
            <div class="card mb-3">
                <div class="card-body bg-body-secondary">
                    <div class="card-text"><small>Customers</small>
                    <br><span class="display-4"><%= totalCustomers.toLocaleString() %></span></div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card mb-3">
                <div class="card-body bg-body-tertiary">
                    <div class="card-text"><small>Invoices</small>
                    <br><span class="display-4"><%= totalInvoices.toLocaleString() %></span></div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card mb-3">
                <div class="card-body bg-body-secondary">
                    <div class="card-text"><small>Suppliers</small>
                    <br><span class="display-4"><%= totalSuppliers.toLocaleString() %></span></div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card mb-3">
                <div class="card-body bg-body-tertiary">
                    <div class="card-text"><small>Purchases</small>
                    <br><span class="display-4">£<%= totalReceipts.toLocaleString() %></span></div>
                </div>
            </div>
        </div>
    </div>

    <!-- Invoice Aging Report -->
    <div class="row mb-5">
        <div class="col-md-6">
            <div class="card bg-body-secondary">
                <div class="card-header display-6 text-center">
                    Invoice Aging Report
                </div>
                <div class="card-body text-center">
                    <ul class="list-group">
                        <li class="list-group-item">1-30 Days Overdue: <strong><%= invoiceAging.overdue_1_30.toLocaleString() %></strong></li>
                        <li class="list-group-item">31-60 Days Overdue: <strong><%= invoiceAging.overdue_31_60.toLocaleString() %></strong></li>
                        <li class="list-group-item">60+ Days Overdue: <strong><%= invoiceAging.overdue_60_plus.toLocaleString() %></strong></li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Payment Speed Analysis -->
        <div class="col-md-6">
            <div class="card bg-body-tertiary">
                <div class="card-header display-6 text-center">
                    Payment Speed Analysis
                </div>
                <div class="card-body text-center">
                    <ul class="list-group">
                        <li class="list-group-item">Avg Days to Pay: <strong><%= paymentSpeedData[0].avgPaymentTime ? paymentSpeedData[0].avgPaymentTime.toFixed(2) : 'N/A' %></strong></li>
                        <li class="list-group-item">Paid within 30 Days: <strong><%= paymentSpeedData[0].paidWithin30Days.toLocaleString() %></strong></li>
                        <li class="list-group-item">Paid within 31-60 Days: <strong><%= paymentSpeedData[0].paidWithin31to60Days.toLocaleString() %></strong></li>
                        <li class="list-group-item">Paid After 60 Days: <strong><%= paymentSpeedData[0].paidAfter60Days.toLocaleString() %></strong></li>
                        <li class="list-group-item text-danger">Unpaid Invoices: <strong><%= paymentSpeedData[0].unpaidInvoices.toLocaleString() %></strong></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <!-- Supplier Spending Breakdown -->
    <div class="row mb-5">
        <div class="col-md-6">
            <div class="card bg-body-secondary">
                <div class="card-header display-6 text-center">
                    Top Suppliers by Spending
                </div>
                <div class="card-body">
                    <canvas id="supplierSpendingChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Customer Retention Rate -->
        <div class="col-md-6">
            <div class="card bg-body-tertiary">
                <div class="card-header display-6 text-center">
                    Customer Retention Rate
                </div>
                <div class="card-body text-center">
                    <h3><%= repeatCustomerRate.toFixed(2) %>%</h3>
                    <p>Percentage of customers who made repeat purchases.</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Income vs Expenses Chart -->
    <div class="row mb-5">
        <div class="col-md-12">
            <div class="card bg-body-tertiary">
                <div class="card-header display-6 text-center">
                    Income vs Expenses (Last 30 Days)
                </div>
                <div class="card-body">
                    <canvas id="incomeExpensesChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Chart.js Scripts -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
document.addEventListener('DOMContentLoaded', () => {
    // Supplier Spending Pie Chart
    const supplierSpendingCtx = document.getElementById('supplierSpendingChart').getContext('2d');
    const supplierNames = <%- JSON.stringify(supplierExpenses.map(s => s.SupplierName)) %>;
    const supplierAmounts = <%- JSON.stringify(supplierExpenses.map(s => s.totalSpent)) %>;

    new Chart(supplierSpendingCtx, {
        type: 'pie',
        data: {
            labels: supplierNames,
            datasets: [{
                label: 'Total Spent (£)',
                data: supplierAmounts,
                backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56', '#2ecc71', '#e74c3c', '#f39c12', '#d35400', '#16a085', '#8e44ad'],
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'bottom' }
            }
        }
    });

    // Income vs Expenses Line Chart
    const incomeExpensesCtx = document.getElementById('incomeExpensesChart').getContext('2d');
    new Chart(incomeExpensesCtx, {
        type: 'line',
        data: {
            labels: <%- JSON.stringify(incomeExpenseData.dates) %>,
            datasets: [
                {
                    label: 'Income',
                    data: <%- JSON.stringify(incomeExpenseData.income) %>,
                    borderColor: '#28a745',
                    backgroundColor: '#28a745',
                    fill: false,
                    tension: 0.4
                },
                {
                    label: 'Expenses',
                    data: <%- JSON.stringify(incomeExpenseData.expenses) %>,
                    borderColor: '#dc3545',
                    backgroundColor: '#dc3545',
                    fill: false,
                    tension: 0.4
                }
            ]
        },
        options: {
            responsive: true,
            scales: {
                x: { title: { display: true, text: 'Date' }},
                y: { title: { display: true, text: 'Amount (£)' }}
            }
        }
    });
});
</script>
